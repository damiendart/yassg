#!/usr/bin/env php
<?php

/*
 * Copyright (C) Damien Dart, <damiendart@pobox.com>.
 * This file is distributed under the MIT licence. For more information,
 * please refer to the accompanying "LICENCE" file.
 */

declare(strict_types=1);

$timingStart = microtime(true);

error_reporting(E_ALL | E_STRICT);
set_error_handler(
    static function (
        int $errorCode,
        string $message,
        string $file = 'UNKNOWN',
        int $line = -1,
    ): bool {
        if ($errorCode & error_reporting()) {
            throw new ErrorException($message, 0, $errorCode, $file, $line);
        }

        return false;
    },
);

$autoloaderLocations = [
    \dirname(__DIR__) . '/vendor/autoload.php',
    \dirname(__DIR__, 4) . '/vendor/autoload.php',
];
$isAutoloaderFound = false;

foreach ($autoloaderLocations as $location) {
    if (file_exists($location)) {
        require_once $location;

        $isAutoloaderFound = true;

        break;
    }
}

if (false === $isAutoloaderFound) {
    throw new RuntimeException(
        sprintf(
            'Unable to locate autoloader (searched for "%s")',
            implode('", "', $autoloaderLocations),
        ),
    );
}

use Yassg\Application\Application;
use Yassg\Application\ConsoleOutput;

use function Yassg\fopen_safe;

$application = new Application(
    new ConsoleOutput(
        fopen_safe('php://stderr', 'a'),
        fopen_safe('php://stdout', 'a'),
    ),
    $timingStart,
);

exit($application->run($argv));
